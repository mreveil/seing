<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classGaussianCalculator" kind="class" language="C++" prot="public">
    <compoundname>GaussianCalculator</compoundname>
    <includes refid="gaussiancalculator_8h" local="no">gaussiancalculator.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGaussianCalculator_1a5b3df43b4b7610fbc51def5c2fe34248" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int GaussianCalculator::fpsize</definition>
        <argsstring></argsstring>
        <name>fpsize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="25" column="9" bodyfile="gaussiancalculator.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGaussianCalculator_1a530039cc1126f976e3531cb1b9360370" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int GaussianCalculator::nG4s</definition>
        <argsstring></argsstring>
        <name>nG4s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="26" column="9" bodyfile="gaussiancalculator.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGaussianCalculator_1a6c8a7e4353ccbeed7ffcaa5a96c7694f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int GaussianCalculator::nG2s</definition>
        <argsstring></argsstring>
        <name>nG2s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="27" column="9" bodyfile="gaussiancalculator.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGaussianCalculator_1a0b2967481871a348f2978e7e0691032d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double GaussianCalculator::cutoff</definition>
        <argsstring></argsstring>
        <name>cutoff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="29" column="12" bodyfile="gaussiancalculator.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGaussianCalculator_1a1556fc2ec0e32bcda7f36261d16304d0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool GaussianCalculator::include_derivatives</definition>
        <argsstring></argsstring>
        <name>include_derivatives</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="30" column="10" bodyfile="gaussiancalculator.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGaussianCalculator_1a83ebe2766ea426bfee895d86fe61056e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int GaussianCalculator::nderivatives</definition>
        <argsstring></argsstring>
        <name>nderivatives</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="31" column="9" bodyfile="gaussiancalculator.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGaussianCalculator_1a11158a9be452d414f3440b4fef9265f1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int GaussianCalculator::ndirections</definition>
        <argsstring></argsstring>
        <name>ndirections</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="32" column="9" bodyfile="gaussiancalculator.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGaussianCalculator_1a9caa21e1a7b60b189b43bac4f2667b95" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* GaussianCalculator::directions</definition>
        <argsstring></argsstring>
        <name>directions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="33" column="9" bodyfile="gaussiancalculator.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGaussianCalculator_1ae53c3af35abde2ba939503f9601868a0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int GaussianCalculator::natomtypes</definition>
        <argsstring></argsstring>
        <name>natomtypes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="35" column="9" bodyfile="gaussiancalculator.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGaussianCalculator_1aa54ffff3402961eebd5c53521de7aecd" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int GaussianCalculator::natompairs</definition>
        <argsstring></argsstring>
        <name>natompairs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="36" column="9" bodyfile="gaussiancalculator.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGaussianCalculator_1a8109643202c6af0fe8eb7da2f2f9f6d3" prot="private" static="no" mutable="no">
        <type>vector&lt; vector&lt; string &gt; &gt;</type>
        <definition>vector&lt;vector&lt;string&gt; &gt; GaussianCalculator::atompairs</definition>
        <argsstring></argsstring>
        <name>atompairs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="37" column="12" bodyfile="gaussiancalculator.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGaussianCalculator_1ac706b25a1c597998a5c52278d7a0ab0e" prot="private" static="no" mutable="no">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; GaussianCalculator::orderedatomtypes</definition>
        <argsstring></argsstring>
        <name>orderedatomtypes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="38" column="12" bodyfile="gaussiancalculator.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGaussianCalculator_1a005be46d5a0e1d354c51abe19f75fbe0" prot="private" static="no" mutable="no">
        <type><ref refid="classAtomicSystem" kindref="compound">AtomicSystem</ref></type>
        <definition>AtomicSystem GaussianCalculator::atomicsystem</definition>
        <argsstring></argsstring>
        <name>atomicsystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="40" column="18" bodyfile="gaussiancalculator.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGaussianCalculator_1a1dc86b28eda45503e73bd63c9234b3fa" prot="private" static="no" mutable="no">
        <type><ref refid="structfingerprintProperties" kindref="compound">fingerprintProperties</ref></type>
        <definition>fingerprintProperties GaussianCalculator::fpproperties</definition>
        <argsstring></argsstring>
        <name>fpproperties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="41" column="27" bodyfile="gaussiancalculator.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGaussianCalculator_1ac7614ab3316a7bf820edffe931ce0816" prot="private" static="no" mutable="no">
        <type><ref refid="classPeriodicTable" kindref="compound">PeriodicTable</ref></type>
        <definition>PeriodicTable GaussianCalculator::ptable</definition>
        <argsstring></argsstring>
        <name>ptable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="43" column="19" bodyfile="gaussiancalculator.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classGaussianCalculator_1a4d4a0d257cd77477adcb2728070c74e3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double GaussianCalculator::calculate_G2</definition>
        <argsstring>(int, int *, double *, double, string)</argsstring>
        <name>calculate_G2</name>
        <param>
          <type>int</type>
          <defname>nneighbors</defname>
        </param>
        <param>
          <type>int *</type>
          <defname>neighbors</defname>
        </param>
        <param>
          <type>double *</type>
          <defname>distances</defname>
        </param>
        <param>
          <type>double</type>
          <defname>eta</defname>
        </param>
        <param>
          <type>string</type>
          <defname>weight_type</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="46" column="12" bodyfile="gaussiancalculator.cpp" bodystart="374" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1a4572cc4b5c454e32f6ecdfc5cb70a7e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double GaussianCalculator::calculate_G4</definition>
        <argsstring>(int, int, int *, double *, double, double, double, string)</argsstring>
        <name>calculate_G4</name>
        <param>
          <type>int</type>
          <defname>atomi</defname>
        </param>
        <param>
          <type>int</type>
          <defname>nneighbors</defname>
        </param>
        <param>
          <type>int *</type>
          <defname>neighbors</defname>
        </param>
        <param>
          <type>double *</type>
          <defname>distances</defname>
        </param>
        <param>
          <type>double</type>
          <defname>eta</defname>
        </param>
        <param>
          <type>double</type>
          <defname>zeta</defname>
        </param>
        <param>
          <type>double</type>
          <defname>gamma</defname>
        </param>
        <param>
          <type>string</type>
          <defname>weight_type</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="47" column="12" bodyfile="gaussiancalculator.cpp" bodystart="413" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1ab4c9c5a025a0446b86c2400cad930c14" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double GaussianCalculator::calculate_cos_theta</definition>
        <argsstring>(int, int, int)</argsstring>
        <name>calculate_cos_theta</name>
        <param>
          <type>int</type>
          <defname>i</defname>
        </param>
        <param>
          <type>int</type>
          <defname>j</defname>
        </param>
        <param>
          <type>int</type>
          <defname>k</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="48" column="12" bodyfile="gaussiancalculator.cpp" bodystart="401" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1ac111f97b2248f3215b3fd03f34c3c029" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double * GaussianCalculator::dRij_dRml_vector</definition>
        <argsstring>(int, int, int, int)</argsstring>
        <name>dRij_dRml_vector</name>
        <param>
          <type>int</type>
          <defname>i</defname>
        </param>
        <param>
          <type>int</type>
          <defname>j</defname>
        </param>
        <param>
          <type>int</type>
          <defname>m</defname>
        </param>
        <param>
          <type>int</type>
          <defname>l</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="50" column="12" bodyfile="gaussiancalculator.cpp" bodystart="460" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1a65d309d3083697dae1ff285940fd9e60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double GaussianCalculator::dCos_theta_ijk_dR_ml</definition>
        <argsstring>(int i, int j, int k, double Rij, double Rik, int m, int l)</argsstring>
        <name>dCos_theta_ijk_dR_ml</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Rij</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Rik</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="51" column="12" bodyfile="gaussiancalculator.cpp" bodystart="501" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1a779a7d043afa1ff307758bdb2a31da1c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double GaussianCalculator::dRij_dRml</definition>
        <argsstring>(int, int, double, int, int)</argsstring>
        <name>dRij_dRml</name>
        <param>
          <type>int</type>
          <defname>i</defname>
        </param>
        <param>
          <type>int</type>
          <defname>j</defname>
        </param>
        <param>
          <type>double</type>
          <defname>Rij</defname>
        </param>
        <param>
          <type>int</type>
          <defname>m</defname>
        </param>
        <param>
          <type>int</type>
          <defname>l</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="52" column="12" bodyfile="gaussiancalculator.cpp" bodystart="480" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1ab1e32aff3a9ea809f4788d93ba4b6a9e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double GaussianCalculator::calculate_G2_prime</definition>
        <argsstring>(int, int, int *, double *, double, int, int, string)</argsstring>
        <name>calculate_G2_prime</name>
        <param>
          <type>int</type>
          <defname>atomi</defname>
        </param>
        <param>
          <type>int</type>
          <defname>nneighbors</defname>
        </param>
        <param>
          <type>int *</type>
          <defname>neighbors</defname>
        </param>
        <param>
          <type>double *</type>
          <defname>distances</defname>
        </param>
        <param>
          <type>double</type>
          <defname>eta</defname>
        </param>
        <param>
          <type>int</type>
          <defname>m</defname>
        </param>
        <param>
          <type>int</type>
          <defname>l</defname>
        </param>
        <param>
          <type>string</type>
          <defname>weight_type</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="53" column="12" bodyfile="gaussiancalculator.cpp" bodystart="532" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1a538281999696627b2151ed6148af9721" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double GaussianCalculator::calculate_G4_prime</definition>
        <argsstring>(int, int, int *, double *, double, double, double, int, int, string)</argsstring>
        <name>calculate_G4_prime</name>
        <param>
          <type>int</type>
          <defname>atomi</defname>
        </param>
        <param>
          <type>int</type>
          <defname>nneighbors</defname>
        </param>
        <param>
          <type>int *</type>
          <defname>neighbors</defname>
        </param>
        <param>
          <type>double *</type>
          <defname>distances</defname>
        </param>
        <param>
          <type>double</type>
          <defname>eta</defname>
        </param>
        <param>
          <type>double</type>
          <defname>zeta</defname>
        </param>
        <param>
          <type>double</type>
          <defname>gamma</defname>
        </param>
        <param>
          <type>int</type>
          <defname>m</defname>
        </param>
        <param>
          <type>int</type>
          <defname>l</defname>
        </param>
        <param>
          <type>string</type>
          <defname>weight_type</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="54" column="12" bodyfile="gaussiancalculator.cpp" bodystart="569" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1a76b98698c2cb21eaa544d1e793692e11" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double * GaussianCalculator::get_G2s</definition>
        <argsstring>(int, int, int *, double *, string)</argsstring>
        <name>get_G2s</name>
        <param>
          <type>int</type>
          <defname>atomid</defname>
        </param>
        <param>
          <type>int</type>
          <defname>nneighbors</defname>
        </param>
        <param>
          <type>int *</type>
          <defname>neighbors</defname>
        </param>
        <param>
          <type>double *</type>
          <defname>distances</defname>
        </param>
        <param>
          <type>string</type>
          <defname>weight_type</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="56" column="12" bodyfile="gaussiancalculator.cpp" bodystart="285" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1a625e67b271084bae09be00b02879f729" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double * GaussianCalculator::get_G4s</definition>
        <argsstring>(int, int, int *, double *, string)</argsstring>
        <name>get_G4s</name>
        <param>
          <type>int</type>
          <defname>atomid</defname>
        </param>
        <param>
          <type>int</type>
          <defname>nneighbors</defname>
        </param>
        <param>
          <type>int *</type>
          <defname>neighbors</defname>
        </param>
        <param>
          <type>double *</type>
          <defname>distances</defname>
        </param>
        <param>
          <type>string</type>
          <defname>weight_type</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="57" column="12" bodyfile="gaussiancalculator.cpp" bodystart="305" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1a231bbecc911cfb36280f9edc32c3cb67" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double * GaussianCalculator::get_G2_primes</definition>
        <argsstring>(int, int, int *, double *, int, int, string)</argsstring>
        <name>get_G2_primes</name>
        <param>
          <type>int</type>
          <defname>atomid2</defname>
        </param>
        <param>
          <type>int</type>
          <defname>nneighbors2</defname>
        </param>
        <param>
          <type>int *</type>
          <defname>neighbors2</defname>
        </param>
        <param>
          <type>double *</type>
          <defname>distances2</defname>
        </param>
        <param>
          <type>int</type>
          <defname>atomid</defname>
        </param>
        <param>
          <type>int</type>
          <defname>direction</defname>
        </param>
        <param>
          <type>string</type>
          <defname>weight_type</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="58" column="12" bodyfile="gaussiancalculator.cpp" bodystart="331" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1a00dd2c1aa60a57a77ba3cd19ba74cb48" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double * GaussianCalculator::get_G4_primes</definition>
        <argsstring>(int, int, int *, double *, int, int, string)</argsstring>
        <name>get_G4_primes</name>
        <param>
          <type>int</type>
          <defname>atomid2</defname>
        </param>
        <param>
          <type>int</type>
          <defname>nneighbors2</defname>
        </param>
        <param>
          <type>int *</type>
          <defname>neighbors2</defname>
        </param>
        <param>
          <type>double *</type>
          <defname>distances2</defname>
        </param>
        <param>
          <type>int</type>
          <defname>atomid</defname>
        </param>
        <param>
          <type>int</type>
          <defname>direction</defname>
        </param>
        <param>
          <type>string</type>
          <defname>weight_type</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="59" column="12" bodyfile="gaussiancalculator.cpp" bodystart="349" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1a592a6b41a279a1c5309f247be1d9df89" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int* GaussianCalculator::sort_neighbors</definition>
        <argsstring>(int id, int nneighbors, int *neighbors)</argsstring>
        <name>sort_neighbors</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nneighbors</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>neighbors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="62" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1aa48b75bb24c3aa6cfc3e1451bc3698c2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int* GaussianCalculator::get_sorted_neighbors_subset</definition>
        <argsstring>(int id, int nneighbors, int *neighbors, string atomtype)</argsstring>
        <name>get_sorted_neighbors_subset</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nneighbors</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>neighbors</declname>
        </param>
        <param>
          <type>string</type>
          <declname>atomtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="63" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1a0d6250ebef8aa702017dac8a4c66e733" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int* GaussianCalculator::get_sorted_neighbors_subset</definition>
        <argsstring>(int id, int nneighbors, int *neighbors, vector&lt; string &gt; atomtypes)</argsstring>
        <name>get_sorted_neighbors_subset</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nneighbors</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>neighbors</declname>
        </param>
        <param>
          <type>vector&lt; string &gt;</type>
          <declname>atomtypes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="64" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1a2109fe03ea11f4eb2dc69a8df31a34fe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GaussianCalculator::get_n_neighbors_subset</definition>
        <argsstring>(int nneighbors, int *neighbors, string atomtype)</argsstring>
        <name>get_n_neighbors_subset</name>
        <param>
          <type>int</type>
          <declname>nneighbors</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>neighbors</declname>
        </param>
        <param>
          <type>string</type>
          <declname>atomtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="65" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1ab39b915f17166fa3a48e38ba596050d0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GaussianCalculator::get_n_neighbors_subset</definition>
        <argsstring>(int nneighbors, int *neighbors, vector&lt; string &gt; atomtypes)</argsstring>
        <name>get_n_neighbors_subset</name>
        <param>
          <type>int</type>
          <declname>nneighbors</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>neighbors</declname>
        </param>
        <param>
          <type>vector&lt; string &gt;</type>
          <declname>atomtypes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="66" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGaussianCalculator_1ad0763c72f83baf93fa88abee2d235281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GaussianCalculator::GaussianCalculator</definition>
        <argsstring>(AtomicSystem &amp;, fingerprintProperties)</argsstring>
        <name>GaussianCalculator</name>
        <param>
          <type><ref refid="classAtomicSystem" kindref="compound">AtomicSystem</ref> &amp;</type>
          <defname>asys</defname>
        </param>
        <param>
          <type><ref refid="structfingerprintProperties" kindref="compound">fingerprintProperties</ref></type>
          <defname>fpprop</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="69" column="9" bodyfile="gaussiancalculator.cpp" bodystart="30" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1a1c05dfa1c1d10eaa97feb4af9559ba2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GaussianCalculator::~GaussianCalculator</definition>
        <argsstring>()</argsstring>
        <name>~GaussianCalculator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="70" column="9" bodyfile="gaussiancalculator.cpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1acf757a4bec743d2d0cacd990360f95d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GaussianCalculator::get_size</definition>
        <argsstring>()</argsstring>
        <name>get_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="72" column="13" bodyfile="gaussiancalculator.cpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classGaussianCalculator_1a481979399af91236ebfdc214ea341e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double * GaussianCalculator::calculate_fingerprint</definition>
        <argsstring>(int, NeighborList &amp;)</argsstring>
        <name>calculate_fingerprint</name>
        <param>
          <type>int</type>
          <defname>atomid</defname>
        </param>
        <param>
          <type><ref refid="classNeighborList" kindref="compound">NeighborList</ref> &amp;</type>
          <defname>neighlist</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gaussiancalculator.h" line="74" column="16" bodyfile="gaussiancalculator.cpp" bodystart="86" bodyend="282"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="gaussiancalculator.h" line="23" column="25" bodyfile="gaussiancalculator.h" bodystart="23" bodyend="76"/>
    <listofallmembers>
      <member refid="classGaussianCalculator_1a005be46d5a0e1d354c51abe19f75fbe0" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>atomicsystem</name></member>
      <member refid="classGaussianCalculator_1a8109643202c6af0fe8eb7da2f2f9f6d3" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>atompairs</name></member>
      <member refid="classGaussianCalculator_1ab4c9c5a025a0446b86c2400cad930c14" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>calculate_cos_theta</name></member>
      <member refid="classGaussianCalculator_1a481979399af91236ebfdc214ea341e7b" prot="public" virt="non-virtual"><scope>GaussianCalculator</scope><name>calculate_fingerprint</name></member>
      <member refid="classGaussianCalculator_1a4d4a0d257cd77477adcb2728070c74e3" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>calculate_G2</name></member>
      <member refid="classGaussianCalculator_1ab1e32aff3a9ea809f4788d93ba4b6a9e" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>calculate_G2_prime</name></member>
      <member refid="classGaussianCalculator_1a4572cc4b5c454e32f6ecdfc5cb70a7e8" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>calculate_G4</name></member>
      <member refid="classGaussianCalculator_1a538281999696627b2151ed6148af9721" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>calculate_G4_prime</name></member>
      <member refid="classGaussianCalculator_1a0b2967481871a348f2978e7e0691032d" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>cutoff</name></member>
      <member refid="classGaussianCalculator_1a65d309d3083697dae1ff285940fd9e60" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>dCos_theta_ijk_dR_ml</name></member>
      <member refid="classGaussianCalculator_1a9caa21e1a7b60b189b43bac4f2667b95" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>directions</name></member>
      <member refid="classGaussianCalculator_1a779a7d043afa1ff307758bdb2a31da1c" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>dRij_dRml</name></member>
      <member refid="classGaussianCalculator_1ac111f97b2248f3215b3fd03f34c3c029" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>dRij_dRml_vector</name></member>
      <member refid="classGaussianCalculator_1a1dc86b28eda45503e73bd63c9234b3fa" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>fpproperties</name></member>
      <member refid="classGaussianCalculator_1a5b3df43b4b7610fbc51def5c2fe34248" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>fpsize</name></member>
      <member refid="classGaussianCalculator_1ad0763c72f83baf93fa88abee2d235281" prot="public" virt="non-virtual"><scope>GaussianCalculator</scope><name>GaussianCalculator</name></member>
      <member refid="classGaussianCalculator_1a231bbecc911cfb36280f9edc32c3cb67" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>get_G2_primes</name></member>
      <member refid="classGaussianCalculator_1a76b98698c2cb21eaa544d1e793692e11" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>get_G2s</name></member>
      <member refid="classGaussianCalculator_1a00dd2c1aa60a57a77ba3cd19ba74cb48" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>get_G4_primes</name></member>
      <member refid="classGaussianCalculator_1a625e67b271084bae09be00b02879f729" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>get_G4s</name></member>
      <member refid="classGaussianCalculator_1a2109fe03ea11f4eb2dc69a8df31a34fe" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>get_n_neighbors_subset</name></member>
      <member refid="classGaussianCalculator_1ab39b915f17166fa3a48e38ba596050d0" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>get_n_neighbors_subset</name></member>
      <member refid="classGaussianCalculator_1acf757a4bec743d2d0cacd990360f95d7" prot="public" virt="non-virtual"><scope>GaussianCalculator</scope><name>get_size</name></member>
      <member refid="classGaussianCalculator_1aa48b75bb24c3aa6cfc3e1451bc3698c2" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>get_sorted_neighbors_subset</name></member>
      <member refid="classGaussianCalculator_1a0d6250ebef8aa702017dac8a4c66e733" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>get_sorted_neighbors_subset</name></member>
      <member refid="classGaussianCalculator_1a1556fc2ec0e32bcda7f36261d16304d0" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>include_derivatives</name></member>
      <member refid="classGaussianCalculator_1aa54ffff3402961eebd5c53521de7aecd" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>natompairs</name></member>
      <member refid="classGaussianCalculator_1ae53c3af35abde2ba939503f9601868a0" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>natomtypes</name></member>
      <member refid="classGaussianCalculator_1a83ebe2766ea426bfee895d86fe61056e" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>nderivatives</name></member>
      <member refid="classGaussianCalculator_1a11158a9be452d414f3440b4fef9265f1" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>ndirections</name></member>
      <member refid="classGaussianCalculator_1a6c8a7e4353ccbeed7ffcaa5a96c7694f" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>nG2s</name></member>
      <member refid="classGaussianCalculator_1a530039cc1126f976e3531cb1b9360370" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>nG4s</name></member>
      <member refid="classGaussianCalculator_1ac706b25a1c597998a5c52278d7a0ab0e" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>orderedatomtypes</name></member>
      <member refid="classGaussianCalculator_1ac7614ab3316a7bf820edffe931ce0816" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>ptable</name></member>
      <member refid="classGaussianCalculator_1a592a6b41a279a1c5309f247be1d9df89" prot="private" virt="non-virtual"><scope>GaussianCalculator</scope><name>sort_neighbors</name></member>
      <member refid="classGaussianCalculator_1a1c05dfa1c1d10eaa97feb4af9559ba2e" prot="public" virt="non-virtual"><scope>GaussianCalculator</scope><name>~GaussianCalculator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
