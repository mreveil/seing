<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classGenericLocalCalculator" kind="class" language="C++" prot="public">
    <compoundname>GenericLocalCalculator</compoundname>
    <includes refid="genericlocalcalculator_8h" local="no">genericlocalcalculator.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGenericLocalCalculator_1ac7dba8c41fe6a81d4d388c2fea42d4fb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int GenericLocalCalculator::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="genericlocalcalculator.h" line="32" column="9" bodyfile="genericlocalcalculator.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGenericLocalCalculator_1a31fcbfabc3fbef16b170b1838be87dab" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double GenericLocalCalculator::cutoff</definition>
        <argsstring></argsstring>
        <name>cutoff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="genericlocalcalculator.h" line="33" column="12" bodyfile="genericlocalcalculator.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGenericLocalCalculator_1ae4bf7a0d4aab733460757ac662e98df2" prot="private" static="no" mutable="no">
        <type><ref refid="classAtomicSystem" kindref="compound">AtomicSystem</ref></type>
        <definition>AtomicSystem GenericLocalCalculator::atomicsystem</definition>
        <argsstring></argsstring>
        <name>atomicsystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="genericlocalcalculator.h" line="34" column="18" bodyfile="genericlocalcalculator.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGenericLocalCalculator_1a54e7841522e1d0b30a178c615ada7d19" prot="private" static="no" mutable="no">
        <type><ref refid="structfingerprintProperties" kindref="compound">fingerprintProperties</ref></type>
        <definition>fingerprintProperties GenericLocalCalculator::fpproperties</definition>
        <argsstring></argsstring>
        <name>fpproperties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="genericlocalcalculator.h" line="35" column="27" bodyfile="genericlocalcalculator.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGenericLocalCalculator_1a93781f2fffe57a654f924204be12d0cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GenericLocalCalculator::GenericLocalCalculator</definition>
        <argsstring>(AtomicSystem &amp;, fingerprintProperties)</argsstring>
        <name>GenericLocalCalculator</name>
        <param>
          <type><ref refid="classAtomicSystem" kindref="compound">AtomicSystem</ref> &amp;</type>
          <defname>asys</defname>
        </param>
        <param>
          <type><ref refid="structfingerprintProperties" kindref="compound">fingerprintProperties</ref></type>
          <defname>fpprop</defname>
        </param>
        <briefdescription>
<para>Constructor based on the atomtic system and <ref refid="structfingerprintProperties" kindref="compound">fingerprintProperties</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="genericlocalcalculator.h" line="39" column="9" bodyfile="genericlocalcalculator.cpp" bodystart="28" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classGenericLocalCalculator_1ae5a9a953e31367d3081c473ef650bb61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GenericLocalCalculator::~GenericLocalCalculator</definition>
        <argsstring>()</argsstring>
        <name>~GenericLocalCalculator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="genericlocalcalculator.h" line="40" column="9" bodyfile="genericlocalcalculator.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classGenericLocalCalculator_1abe34bae0430d52064d6a22b9afc2c449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GenericLocalCalculator::get_size</definition>
        <argsstring>()</argsstring>
        <name>get_size</name>
        <briefdescription>
<para>Returns the dimensionality of the fingerprint. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="genericlocalcalculator.h" line="43" column="13" bodyfile="genericlocalcalculator.cpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classGenericLocalCalculator_1aeb91e8ed7cf321c074bc3db739607ae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double * GenericLocalCalculator::calculate_fingerprint</definition>
        <argsstring>(int, NeighborList &amp;)</argsstring>
        <name>calculate_fingerprint</name>
        <param>
          <type>int</type>
          <defname>atomid</defname>
        </param>
        <param>
          <type><ref refid="classNeighborList" kindref="compound">NeighborList</ref> &amp;</type>
          <defname>nlist</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Will call the calculate_fingerprint function of the actual fingerprint calculator and returns the fingerprint </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="genericlocalcalculator.h" line="48" column="16" bodyfile="genericlocalcalculator.cpp" bodystart="65" bodyend="90"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class that holds a generic calculator to switch between actual fingerprint calculators. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="genericlocalcalculator.h" line="30" column="29" bodyfile="genericlocalcalculator.h" bodystart="30" bodyend="50"/>
    <listofallmembers>
      <member refid="classGenericLocalCalculator_1ae4bf7a0d4aab733460757ac662e98df2" prot="private" virt="non-virtual"><scope>GenericLocalCalculator</scope><name>atomicsystem</name></member>
      <member refid="classGenericLocalCalculator_1aeb91e8ed7cf321c074bc3db739607ae5" prot="public" virt="non-virtual"><scope>GenericLocalCalculator</scope><name>calculate_fingerprint</name></member>
      <member refid="classGenericLocalCalculator_1a31fcbfabc3fbef16b170b1838be87dab" prot="private" virt="non-virtual"><scope>GenericLocalCalculator</scope><name>cutoff</name></member>
      <member refid="classGenericLocalCalculator_1a54e7841522e1d0b30a178c615ada7d19" prot="private" virt="non-virtual"><scope>GenericLocalCalculator</scope><name>fpproperties</name></member>
      <member refid="classGenericLocalCalculator_1a93781f2fffe57a654f924204be12d0cf" prot="public" virt="non-virtual"><scope>GenericLocalCalculator</scope><name>GenericLocalCalculator</name></member>
      <member refid="classGenericLocalCalculator_1abe34bae0430d52064d6a22b9afc2c449" prot="public" virt="non-virtual"><scope>GenericLocalCalculator</scope><name>get_size</name></member>
      <member refid="classGenericLocalCalculator_1ac7dba8c41fe6a81d4d388c2fea42d4fb" prot="private" virt="non-virtual"><scope>GenericLocalCalculator</scope><name>size</name></member>
      <member refid="classGenericLocalCalculator_1ae5a9a953e31367d3081c473ef650bb61" prot="public" virt="non-virtual"><scope>GenericLocalCalculator</scope><name>~GenericLocalCalculator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
